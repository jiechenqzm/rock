<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
	default-autowire="byName">
	
	<bean id="coreDataDAO"  class="com.nd.rock.server.model.dao.impl.CoreDataDAOImpl">  
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
	
	<bean id="jdbcTemplate"  class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name="dataSource" ref="rockDataSource"/>
    </bean>
	
	<bean id="rockDataSource"  class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">  
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>  
        <property name="url" value="jdbc:mysql://s2.rds.sdp.nd:3306/dev_mysql_rock?characterEncoding=UTF-8"/>  
        <property name="username" value="user_dx1i9uhpa0"/>  
        <property name="password" value="S30Tt7m1Jb"/>  
        <!--maxActive: 最大连接数量-->    
        <property name="maxActive" value="20"/>  
        <!--minIdle: 最小空闲连接-->    
        <property name="minIdle" value="4"/>  
        <!--maxIdle: 最大空闲连接-->    
        <property name="maxIdle" value="20"/>  
        <!--initialSize: 初始化连接-->    
        <property name="initialSize" value="4"/>  
        <!-- 连接被泄露时是否打印 -->  
        <property name="logAbandoned" value="true"/>  
        <!--removeAbandoned: 是否自动回收超时连接-->    
        <property name="removeAbandoned"  value="true"/>  
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->    
        <property name="removeAbandonedTimeout" value="10"/>  
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于1秒-->  
        <property name="maxWait" value="5000"/>  
        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
        <property name="timeBetweenEvictionRunsMillis" value="10000"/>  
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
        <property name="numTestsPerEvictionRun" value="10"/>  
        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->  
        <property name="minEvictableIdleTimeMillis" value="10000"/>  
		<property name="validationQuery" value="SELECT NOW() FROM DUAL"/>  
    </bean>  
	
	
	<!-- 
	<bean id="dataSource" class="com.taobao.tddl.jdbc.group.TGroupDataSource" init-method="init">
		<property name="appName" value="METADATA_CENTER_APP" />
		<property name="dbGroupKey" value="METADATA_CENTER_GROUP" />
	</bean>
	
	
	<bean id="metaServerApi" class="com.taobao.metacenter.connect.MetaServerApiConnect"/>

	<bean id="dataSource" class="com.taobao.tddl.jdbc.group.TGroupDataSource" init-method="init">
		<property name="appName" value="METADATA_CENTER_APP" />
		<property name="dbGroupKey" value="METADATA_CENTER_GROUP" />
	</bean>

	<bean id="dailyDiamondDataSource" class="com.taobao.tddl.jdbc.group.TGroupDataSource" init-method="init">
		<property name="appName" value="METADATA_CENTER_APP" />
		<property name="dbGroupKey" value="DIAMOND_GROUP11" />
	</bean>

	<bean id="perfDiamondDataSource" class="com.taobao.tddl.jdbc.group.TGroupDataSource" init-method="init">
		<property name="appName" value="METADATA_CENTER_APP" />
		<property name="dbGroupKey" value="DIAMOND_PERF_GROUP" />
	</bean>
	
	<bean id="aliyunDiamondDataSource" class="com.taobao.tddl.jdbc.group.TGroupDataSource" init-method="init">
		<property name="appName" value="METADATA_CENTER_APP" />
		<property name="dbGroupKey" value="DIAMOND_ALIYUN_GROUP" />
	</bean>

	<bean id="idbDatasource" class="com.taobao.tddl.jdbc.group.TGroupDataSource" init-method="init">
		<property name="appName" value="METADATA_CENTER_APP" />
		<property name="dbGroupKey" value="EMDB_GROUP" />
	</bean>

	<bean id="idbTemplate" class="org.springframework.jdbc.core.JdbcTemplate" autowire="byName">
		<property name="dataSource">
			<ref bean="idbDatasource" />
		</property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" autowire="byName">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<bean id="diamondDataSources" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="DAILY">
					<bean id="dailyDiamondTemplate" class="org.springframework.jdbc.core.JdbcTemplate" autowire="byName">
						<property name="dataSource">
							<ref bean="dailyDiamondDataSource" />
						</property>
					</bean>
				</entry>
				<entry key="PERFORMANCE">
					<bean id="perfDiamondTemplate" class="org.springframework.jdbc.core.JdbcTemplate" autowire="byName">
						<property name="dataSource">
							<ref bean="perfDiamondDataSource" />
						</property>
					</bean>
				</entry>
				<entry key="ALIYUN_DAILY">
					<bean id="aliyunDiamondTemplate" class="org.springframework.jdbc.core.JdbcTemplate" autowire="byName">
						<property name="dataSource">
							<ref bean="aliyunDiamondDataSource" />
						</property>
					</bean>
				</entry>
			</map>
		</constructor-arg>
	</bean>


	库表扫描逻辑使用
	<bean id="diamondEnvs" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="DAILY" value="center" />
				<entry key="PERFORMANCE" value="perf" />
			</map>
		</constructor-arg>
	</bean>

	<bean id="env" class="java.lang.String">
		<constructor-arg>
			<value>daily</value>
		</constructor-arg>
	</bean>
	
	
    <bean id="needAuth" class="java.lang.Boolean">
		<constructor-arg>
			<value>false</value>
		</constructor-arg>
	</bean>

	<bean id="diamondAddrServers" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="DAILY" value="10.232.16.8" />
				<entry key="PERFORMANCE" value="10.232.20.205" />
				<entry key="ALIYUN_DAILY" value="10.232.10.36" />
			</map>
		</constructor-arg>
	</bean> -->
</beans>